
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/Scripts/toastr.js"></script>
<script src="~/Scripts/toastr.min.js"></script>

@model IEnumerable<mvc.Models.AssignMultipalUsertoJobPosition>
    

    @{

        Layout = null;
    }


    <div class="modal-dialog" id="pnl-mdlCandidate">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "", @id = "frmCandidate" }))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h3 class="modal-title">Assign User</h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-10">
                            <div class="form-group">
                                @*<label for="name">Select User</label>*@
                                @*@Html.TextBoxFor(a => a.ReqId, new { @class = "form-control hidden", placeholder = " ", title = "ReqId", @id = "ReqId" })*@
                                <input type="text" class="hidden" value="@ViewBag.reqid" id="ReqId" />
                                @Html.DropDownList("model.UserId", new SelectList((System.Collections.IEnumerable)ViewData["UserList"], "Value", "Text"), "Select User Name", new { @class = "form-control input-sm", @id = "UserList", Title = "UserList" })
                                

                            </div>
                        </div>
                        <div class="col-sm-2">
                         
                                <a id="add" class="btn btn-primary">Add</a>
                               
                            </div>

                        </div>
                    
                    <div>
                        <table id="detailsTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>User Name</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="tbl">

                                @if (Model.Count() != 0)
                                {

                                    @Html.Hidden("ReqId", Model.First().req_id.ToString(), new { id = "ReqId1" })

                                    foreach (var item in Model)
                                    {
                                        <tr><td>@item.FullName</td><td class="hidden">@item.userid</td><td class="hidden">@item.req_id</td><td><a id="@item.Assignid" data-itemId="0" href="#" class="deleteItem removeclass"><i class="fa fa-trash"></i></a></td></tr>
                                    }
                                    
                                 }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="modal-footer">

                    <button type="button" id="btnsave1" name="btnsave" onclick="bindUser();" class="btn btn-primary">Save</button>
                    <button type="button" id="btnsave1" name="btncancel" onclick="reload();" class="btn btn-primary">Cancel</button>
                    @*@Html.ActionLink("Cancel", "Joblist", "Placement", null, new { @class = "btn btn-default" })*@

                </div>

            </div>
        }
    </div>

    <div class="container m-t-md">
        <div class="row">


            <div id="grid1" class="col-sm-10">
                @*@Html.Partial("PageGrid")*@
            </div>

            <div class="col-sm-10">
                <div class="container m-t-md">
                    <div class="row">
                        <div class="col-sm-12">

                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <script>

        function reload()
        {
            window.location.reload();
        }

        $('.removeclass').on("click", function () {
            var idValue = $(this).attr('id');
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/Placement/DeleteAssignedUser',

                data:
                {
                    Assignid: idValue

                },
                success: function (da) {
                    // alert(da);
                },

                error: function (XMLHttpRequest, textStatus, errorThrown) {

                }
            });
        });

        $(document).ready(function () {

            $("#validation").hide();

        


        });
        $(document).ready(function () {

            toastr.options = {
                "closeButton": true,
                "positionClass": "toast-top-right",
                "onclick": null,
                "showDuration": "0",
                "hideDuration": "0",
                "timeOut": "0",
                "showMethod": "fadeIn"
            };

        });



        $("#add").click(function (e) {
            //alert('hi');

            e.preventDefault();

            // if ($.trim($("#location").val()) == "" || $.trim($("#location_id").val()) == "") return;

            var UserList = $("#UserList option:selected").text(),
                User_id = $("#UserList").val(),
                ReqId = $("#ReqId").val(),
                detailsTableBody = $("#detailsTable tbody");

            var productItem = '<tr><td>' + UserList + '</td><td class="hidden">' + User_id + '</td><td class="hidden">' + ReqId + '</td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td></tr>';

            detailsTableBody.append(productItem);
            clearItem();
        });
        //After Add A New Order In The List, Clear Clean The Form For Add More Order.
        function clearItem() {
            $("#location").val('');
            $("#location_id").val('');
            // $("#quantity").val('');
        }
        // After Add A New Order In The List, If You Want, You Can Remove It.
        $(document).on('click', 'a.deleteItem', function (e) {
            e.preventDefault();
            var $self = $(this);
            if ($(this).attr('data-itemId') == "0") {
                $(this).parents('tr').css("background-color", "#ff6347").fadeOut(800, function () {
                    $(this).remove();
                });
            }
        });


        function saveOrder(data) {
           return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Placement/AssignMultipalUserToPosition",
                data: data,
                success: function (result) {
                    toastr.success(result);

                },
                error: function () {
                    alert("Error!")
                }
            });
        }


        function bindUser() {
          
            if ($("#tbl").html().trim() == "") {
                alert('please add User');                
                return false;
            }

            //   e.preventDefault();
            var orderArr = [];
            orderArr.length = 0;

            $.each($("#detailsTable tbody tr"), function () {
                orderArr.push({
                    UserId: $(this).find('td:eq(1)').html(),
                    ReqId: $(this).find('td:eq(2)').html(),

                });
            });

            var data = JSON.stringify({
                AssignUsertoJobPosition: orderArr
            });


            $.when(saveOrder(data)).then(function (response) {
                console.log(response);
            }).fail(function (err) {
                console.log(err);
            });

        }


    </script>




