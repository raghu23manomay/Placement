@*<script src="~/autocomplete/latest.js"></script>
    <script src="~/autocomplete/jquery-ui.js"></script>*@


@model  mvc.Models.Candidate
@{
    Layout = null;
}


<!DOCTYPE html>
<div class="modal-dialog" id="pnl-mdlCandidate">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "", @id = "frmCandidate" }))
    {
        <div class="modal-content" style="width: 682px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Add candidate</h3>
            </div>
            <div class="modal-body">
                <fieldset>
                    <legend style=" border-bottom-color:  #bdb8ba; font-size: 18px;">Position Details:</legend>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="position">Select position</label>
                                @Html.DropDownList("model.req_id", new SelectList((System.Collections.IEnumerable)ViewData["JobList"], "Value", "Text"), "Select Position", new { @class = "form-control input-sm", @id = "req_id", Title = "req_id" })
                                @Html.HiddenFor(model => model.req_id)
                                @*@Html.TextBoxFor(a => a.req_title, new { @class = "form-control ", @id = "Position", placeholder = "select position" })
                                    @Html.HiddenFor(model => model.req_id, new { @id = "req_id" })*@
                                @Html.ValidationMessageFor(model => model.req_id, "", new { @class = "text-danger" })
                                <div class="text-danger" id="req_id_error_msg"></div>
                            </div>

                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">Job Location</label>
                                @Html.Partial("FllterLocationForAddCandidate")

                                @*@Html.TextBoxFor(a => a.Location, new { @class = "form-control ", @id = "location", placeholder = "Location" })
                                    @Html.HiddenFor(model => model.location_id, new { @id = "location_id" })*@
                                @Html.ValidationMessageFor(model => model.location_id, "", new { @class = "text-danger" })
                                <div class="text-danger" id="Location1_error_msg"></div>

                            </div>
                        </div>
                    </div>

                </fieldset>
                <fieldset>
                    <legend style=" border-bottom-color:  #bdb8ba; font-size: 17px;">Candidate Details:</legend>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="name">Name</label>
                                @Html.TextBoxFor(a => a.Name, new { @class = "form-control", placeholder = "Enter name", title = "name", @id = "name" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                <div class="text-danger" id="name_error_msg"></div>

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">Mobile No</label>
                                @Html.TextBoxFor(a => a.MobileNo, new { @class = "form-control", placeholder = "Enter Mobile No", title = "MobileNo", @id = "MobileNo" })
                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                <div class="text-danger" id="MobileNo_error_msg"></div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">Second Mobile No</label>
                                @Html.TextBoxFor(a => a.MobileNo2, new { @class = "form-control", placeholder = "Enter second Mobile No", title = "second MobileNo", @id = "MobileNo2" })
                                @Html.ValidationMessageFor(model => model.MobileNo2, "", new { @class = "text-danger" })
                                <div class="text-danger" id="MobileNo2_error_msg"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email">Email</label>
                                @Html.TextBoxFor(a => a.EmailID, new { @class = "form-control", placeholder = "Enter email", title = "emailid", @id = "emailid" })
                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                <div class="text-danger" id="emailid_error_msg"></div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">Skype ID</label>
                                @Html.TextBoxFor(a => a.SkypeID, new { @class = "form-control", placeholder = "Enter SkypeID", title = "SkypeID", @id = "SkypeID" })
                                @Html.ValidationMessageFor(model => model.SkypeID, "", new { @class = "text-danger" })
                                <div class="text-danger" id="SkypeID_error_msg"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">Current Organization</label>
                                @Html.TextBoxFor(a => a.Current_Organization, new { @class = "form-control", placeholder = "Enter Current Organization", title = "Current_Organization", @id = "Current_Organization" })
                                @Html.ValidationMessageFor(model => model.Current_Organization, "", new { @class = "text-danger" })
                                <div class="text-danger" id="Current_Organization_error_msg"></div>

                            </div>
                        </div>
                        <div class="col-sm-6">

                            <div class="form-group">
                                <div class="form-group">
                                    <label for="email">Current Position</label>
                                    @Html.TextBoxFor(a => a.Current_Position, new { @class = "form-control", placeholder = "Enter Current Position", title = "Current Position", @id = "Current_Position" })
                                    @Html.ValidationMessageFor(model => model.Current_Position, "", new { @class = "text-danger" })
                                    @*@Html.TextBoxFor(a => a.Designation, new { @class = "form-control ", @id = "autocomplete", placeholder = "current position" })
                                        @Html.HiddenFor(model => model.Current_Position_id, new { @id = "Current_Position_id" })*@
                                </div>
                                <div class="text-danger" id="Current_Position_error_msg">
                                </div>

                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email">Current Location</label>
                                @Html.TextBoxFor(a => a.Current_Location, new { @class = "form-control ", @id = "curr_location", placeholder = "select current location" })
                                @Html.HiddenFor(model => model.Current_Location_id, new { @id = "Current_Location_id" })
                                @Html.ValidationMessageFor(model => model.Current_Location_id, "", new { @class = "text-danger" })
                                <div class="text-danger" id="Current_Location_error_msg"></div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">working from Date</label>

                                @Html.TextBoxFor(model => model.working_from_Date, new { type = "date", @class = "form-control text", @id = "datepicker" })
                                @Html.ValidationMessageFor(model => model.working_from_Date, "", new { @class = "text-danger" })
                                <div class="text-danger" id="working_from_Date_error_msg"></div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email">Qualification</label>
                                @Html.TextBoxFor(a => a.Qualification, new { @class = "form-control", placeholder = "Enter Qualification", title = "Qualification", @id = "Qualification" })
                                @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                                <div class="text-danger" id="Qualification_error_msg"></div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">Qualification PG</label>
                                @Html.TextBoxFor(a => a.Qualification_PG, new { @class = "form-control", placeholder = "Enter Qualification PG", title = "Qualification_PG", @id = "Qualification_PG" })
                                @Html.ValidationMessageFor(model => model.Qualification_PG, "", new { @class = "text-danger" })
                                @*<div class="text-danger" id="Qualification_PG_error_msg"></div>*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email">Total Experiance(years)</label>
                                @Html.TextBoxFor(a => a.Total_Exp, new { @class = "form-control", placeholder = "Enter Total Experiance", title = "Total_Exp", @id = "Total_Exp" })
                                @Html.ValidationMessageFor(model => model.Total_Exp, "", new { @class = "text-danger" })
                                <div class="text-danger" id="Total_Exp_error_msg"></div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">currently drawn salary</label>
                                @Html.TextBoxFor(a => a.currently_drawn_salary, new { @class = "form-control", placeholder = "Enter currently drawn salary", title = "currently_drawn_salary", @id = "currently_drawn_salary" })
                                @Html.ValidationMessageFor(model => model.currently_drawn_salary, "", new { @class = "text-danger" })
                                <div class="text-danger" id="currently_drawn_salary_error_msg"></div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="name">expected salary</label>
                                @Html.TextBoxFor(a => a.expected_salary, new { @class = "form-control", placeholder = "Enter expected salary", title = "expected_salary", @id = "expected_salary" })
                                @Html.ValidationMessageFor(model => model.SkypeID, "", new { @class = "text-danger" })
                                <div class="text-danger" id="expected_salary_error_msg"></div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="name">Notice period</label>
                                @Html.TextBoxFor(a => a.Notice_period, new { @class = "form-control", placeholder = "Enter Notice period", title = "Notice_period", @id = "Notice_period" })
                                @Html.ValidationMessageFor(model => model.Notice_period, "", new { @class = "text-danger" })
                                <div class="text-danger" id="Notice_period_error_msg"></div>
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="name">Attcah Resume:-</label>
                                    <a href="@Url.Action("FileUpload", "Placement")" data-toggle="modal" data-target="#mdlUploadResume"><span>Upload Resume</span></a>

                                </div>
                            </div>
                        </div>*@

                </fieldset>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnsave" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-default" onclick="refreshforclosebutton()" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    }
</div>
<div id="mdlUploadResume" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
</div>
<script src="~/Scripts/toastr.js"></script>
<script src="~/Scripts/toastr.min.js"></script>
@*<script src="~/Scripts/jquery.dateFormat-1.0.js"></script>*@
<script>

    $(document).ready(function () {


        $("#Position").change(function () {
            //alert("The text has been changed.");
              var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                              url: "@Url.Action("GetLocationforaddcandiateList","placement")",
                              data:
                                  {
                                      ReqID: $("#req_id").val(),

                                  },
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#location").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#location_id").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });



            $.ajax({
            type: 'GET',
            dataType: 'json',
                url: '/Placement/GetLocationforaddcandiateList',
            data:
                {
                    ReqID: $("#req_id").val(),

                },
                success: function (da) {
                    var data = $.map(result, function (obj) {
                        obj.value = obj.Text; // desired field
                        obj.data = obj.Value; // desired field
                        returnResult.push(obj);
                        $("#location").autocomplete({
                            lookup: returnResult,
                            onSelect: function (suggestion) {
                                $("#location_id").val(suggestion.data);

                            }
                        });

                    });

            },

            error: function (XMLHttpRequest, textStatus, errorThrown) {

            }
            });
            return true;


        });


        $('#btnsave').on('click', function (e) {
           // alert($("#datepicker").date());

            var error = 0;
            if ($('#req_id').val() == 0)
            {
                error = 1;
                $('#req_id_error_msg').html("please select Position.");
                $('#req_id_error_msg').show();

            }
            else {
                $('#req_id_error_msg').hide();
            }

                 if ($('#Current_Location_id').val() == '') {
                error = 1;
                $('#Current_Location_error_msg').html("please select current location.");
                $('#Current_Location_error_msg').show();
            }
            else {
                $('#Current_Location_error_msg').hide();
            }

            if ($('#Notice_period').val() == '') {
                error = 1;
                $('#Notice_period_error_msg').html("The Notice period field is required.");
                $('#Notice_period_error_msg').show();
            }
            else {
                $('#Notice_period_error_msg').hide();
            }
            if ($('#expected_salary').val() == '') {
                error = 1;
                $('#expected_salary_error_msg').html("The expected salary field is required.");
                $('#expected_salary_error_msg').show();
            }
            else {
                $('#expected_salary_error_msg').hide();
            }
            if ($('#currently_drawn_salary').val() == '') {
                error = 1;
                $('#currently_drawn_salary_error_msg').html("The currently drawn salary field is required.");
                $('#currently_drawn_salary_error_msg').show();
            }
            else {
                $('#currently_drawn_salary_error_msg').hide();
            }
            if ($('#Total_Exp').val() == '') {
                error = 1;
                $('#Total_Exp_error_msg').html("The Total Experiance field is required.");
                $('#Total_Exp_error_msg').show();
            }
            else {
                $('#Total_Exp_error_msg').hide();
            }
            //if ($('#Qualification_PG').val() == '') {
            //    error = 1;
            //    $('#Qualification_PG_error_msg').html("The Qualification_PG field is required.");
            //    $('#Qualification_PG_error_msg').show();
            //}
            //else {
            //    $('#Qualification_PG_error_msg').hide();
            //}
            if ($('#Qualification').val() == '') {
                error = 1;
                $('#Qualification_error_msg').html("The Qualification field is required.");
                $('#Qualification_error_msg').show();
            }
            else {
                $('#Qualification_error_msg').hide();
            }
               if ($('#Current_Position').val() == '') {
                error = 1;
                $('#Current_Position_error_msg').html("The Posion field is required.");
                $('#Current_Position_error_msg').show();
            }
            else {
                $('#Current_Position_error_msg').hide();
            }
            if ($('#Current_Organization').val() == '') {
                error = 1;
                $('#Current_Organization_error_msg').html("The current orgnization field is required.");
                $('#Current_Organization_error_msg').show();
            }
            else {
                $('#Current_Organization_error_msg').hide();
            }

            if ($('#name').val() == '') {
                error = 1;
                $('#name_error_msg').html("The Name field is required.");
                $('#name_error_msg').show();
            }
            else {
                $('#name_error_msg').hide();
            }

            if ($('#emailid').val() == '') {
                error = 1;
                $('#emailid_error_msg').html("The Email field is required.");
                $('#emailid_error_msg').show();
            }
            else {
                $('#emailid_error_msg').hide();
            }

           if ($('#location').val() == '') {
                     error = 1;
                     $('#Location1_error_msg').html("please select location.");
                     $('#Location1_error_msg').show();
                 }
                 else {
                     $('#Location1_error_msg').hide();
                 }


            if (error) {
                return false;
            } else {
                debugger;
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/Placement/AddCandidate",
                    data: {
                        "Name": $("#name").val(), "req_id": $("#req_id").val(), emailid: $("#emailid").val(), MobileNo: $("#MobileNo").val(), MobileNo2: $("#MobileNo2").val(), SkypeID: $("#SkypeID").val(),
                        Current_Organization: $("#Current_Organization").val(),
                        Current_Position: $("#Current_Position").val(),
                        Current_Location_id: $("#Current_Location_id").val(),
                        location_id: $("#location_id").val(),
                        working_from_Date: $("#datepicker").val(),
                        Qualification: $("#Qualification").val(),
                        Qualification_PG: $("#Qualification_PG").val(),
                        Total_Exp: $("#Total_Exp").val(),
                        currently_drawn_salary: $("#currently_drawn_salary").val(),
                        expected_salary: $("#expected_salary").val(),
                        Notice_period: $("#Notice_period").val()

                    },
                    success: function (result) {
                        toastr.success("Candidate added successfully.");
                        $("#mdlAddCandidate .close").click()
                        refresh();

                        if (result.Success) {

                        }
                    },
                    error: function (errorData) {
                    }
                });
            }
            return true;
        });
    });


    $(document).ready(function () {
        getdesignation();
       // getRequirment();
        getcurrentLocation();
      //  GetLocationforaddcandiateList();
        toastr.options = {
            "closeButton": true,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "0",
            "hideDuration": "0",
            "timeOut": "0",
            "showMethod": "fadeIn"
        };

    });

    function getdesignation()
    {
             var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                              url: "@Url.Action("GetDesignationList", "placement")",
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#autocomplete").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#Current_Position_id").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });
    }

    @*function getRequirment()
    {
             var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                         url: "@Url.Action("GetRequirmentList", "placement")",
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#Position").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#req_id").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });
    }*@

    @*function GetLocationforaddcandiateList()
    {
             var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                         url: "@Url.Action("GetLocationList", "placement")",
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        data:
                        {
                            ReqID: $("#req_id").val(),
                        },
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#location").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#location_id").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });
    }*@


     function getcurrentLocation()
    {
             var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                         url: "@Url.Action("GetcurrentLocationList", "placement")",
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#curr_location").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#Current_Location_id").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });
    }



       function refresh() {

               // $('#pageLoader').show();

                $.ajax({
                    url: "@Url.Action("LoadData", "Placement")",
                    contentType: "application/json",
                    data: JSON.stringify({ page: 1, Name:null }),
                    dataType: "text",
                    type: "POST",
                    async: true,
                    success: function (data) {
                        $('#grid1').html(data);
                        $("#pageLoader .close").click()



                    },
                    error: function (data) {
                        $('#pageLoader').hide();

                        $("#pageLoader .close").click()

                    },
                    complete: function () {
                        $('#pageLoader').hide();

                        $("#pageLoader .close").click()


                    }


        });
        return true;

    }

    function refreshforclosebutton() {

               // $('#pageLoader').show();

                $.ajax({
                    url: "@Url.Action("LoadData", "Placement")",
                    contentType: "application/json",
                    data: JSON.stringify({ page: 1, Name:null }),
                    dataType: "text",
                    type: "POST",
                    async: true,
                    success: function (data) {
                        $('#grid1').html(data);
                        $("#pageLoader .close").click()
                        $("#mdlAddCandidate .close").click()


                    },
                    error: function (data) {
                        $('#pageLoader').hide();
                        $("#pageLoader .close").click()
                        $("#mdlAddCandidate .close").click()


                    },
                    complete: function () {
                        $('#pageLoader').hide();
                        $("#pageLoader .close").click()
                        $("#mdlAddCandidate .close").click()

                    }


        });
        return true;

    }

    $("#req_id").change(function () {

             // $('#pageLoader').show();

             $.ajax({
                 url: "@Url.Action("FllterLocationForAddCandidate", "Placement")",
                 contentType: "application/json",
                 data: JSON.stringify({ Reqid: $("#req_id").val() }),
                 dataType: "text",
                 type: "POST",
                 async: true,
                 success: function (data) {
                     $('#location_id').html(data);
                     //$("#pageLoader .close").click()
                 },
                 error: function (data) {


                 },
                 complete: function () {

                 }

             });
             return true;

         });



</script>

